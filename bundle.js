(()=>{"use strict";var t={56:(t,n,e)=>{t.exports=function(t){var n=e.nc;n&&t.setAttribute("nonce",n)}},72:t=>{var n=[];function e(t){for(var e=-1,o=0;o<n.length;o++)if(n[o].identifier===t){e=o;break}return e}function o(t,o){for(var r={},s=[],a=0;a<t.length;a++){var c=t[a],l=o.base?c[0]+o.base:c[0],d=r[l]||0,A="".concat(l," ").concat(d);r[l]=d+1;var h=e(A),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==h)n[h].references++,n[h].updater(u);else{var m=i(u,o);o.byIndex=a,n.splice(a,0,{identifier:A,updater:m,references:1})}s.push(A)}return s}function i(t,n){var e=n.domAPI(n);return e.update(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap&&n.supports===t.supports&&n.layer===t.layer)return;e.update(t=n)}else e.remove()}}t.exports=function(t,i){var r=o(t=t||[],i=i||{});return function(t){t=t||[];for(var s=0;s<r.length;s++){var a=e(r[s]);n[a].references--}for(var c=o(t,i),l=0;l<r.length;l++){var d=e(r[l]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}r=c}}},113:t=>{t.exports=function(t,n){if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}},208:(t,n,e)=>{e.d(n,{A:()=>a});var o=e(354),i=e.n(o),r=e(314),s=e.n(r)()(i());s.push([t.id,":root {\n  --color-accent: oklch(0.6 0.1 120);\n  --color-accent--hover: oklch(from var(--color-accent) calc(l - 0.1) c h);\n  --color-accent--disabled: color-mix(\n    in oklch,\n    var(--color-accent),\n    transparent 40%\n  );\n  --color-neutral: oklch(from var(--color-accent) 0.9 7% h);\n  --color-text: oklch(from var(--color-accent) 0 c h);\n  --color-background: oklch(from var(--color-accent) 1 3% h);\n  --color-background--hover: color-mix(\n    in oklch,\n    var(--color-background),\n    black 8%\n  );\n  --color-border: oklch(from var(--color-accent) l 5% h);\n  --color-link: oklch(from var(--color-accent) l c 230);\n  --color-link--hover: oklch(from var(--color-link) calc(l - 0.2) c h);\n\n  --font-regular: 400;\n  --font-medium: 500;\n  --font-bold: 600;\n\n  --z-dialog: 50;\n}\n\n*,\n*::before,\n*::after {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\n:where(button, input, select, textarea, a, area):focus-visible {\n  outline: 2px solid color-mix(in oklch, var(--color-accent), transparent 50%);\n  outline-offset: 2px;\n}\n\na {\n  color: var(--color-link);\n  &:hover {\n    color: var(--color-link--hover);\n  }\n}\n\nbody {\n  color-scheme: light dark;\n  font-family: Nunito, sans-serif;\n  font-weight: var(--font-regular);\n  color: var(--color-text);\n  background: var(--color-background);\n  &.dark {\n    --color-text: oklch(from var(--color-accent) l 15% h);\n    --color-background: oklch(from var(--color-accent) 0.2 5% h);\n    --color-border: oklch(from var(--color-accent) 0.5 5% h);\n    --color-background--hover: color-mix(\n      in oklch,\n      var(--color-background),\n      white 10%\n    );\n    --color-neutral: oklch(from var(--color-accent) 0.6 7% h);\n  }\n}\n\n.dialog {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: var(--z-dialog);\n  transform: translate(-50%, -50%);\n  padding: 1rem;\n  min-width: 30rem;\n  max-width: 60rem;\n  background: var(--color-background);\n  color: var(--color-text);\n  border-radius: 0.5rem;\n  border: 1px solid var(--color-border);\n  &::backdrop {\n    background: rgba(0 0 0 / 0.3);\n    backdrop-filter: blur(0.25rem);\n  }\n  & .dialog-title {\n    font-size: 1.5rem;\n    font-weight: var(--font-bold);\n    color: var(--color-text);\n    margin-block-end: 2rem;\n  }\n  & .dialog-close {\n    position: absolute;\n    top: 0.5rem;\n    right: 0.5rem;\n    border: none;\n    background: none;\n    cursor: pointer;\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    width: 2.5rem;\n    aspect-ratio: 1 / 1;\n    font-size: 1.5rem;\n    border-radius: 0.5rem;\n    color: var(--color-text);\n  }\n}\n\n.switch {\n  display: inline-flex;\n  align-items: center;\n  gap: 1rem;\n  font-size: 1.25rem;\n  color: var(--color-text);\n  & input[type='checkbox'] {\n    --height: 2rem;\n    --padding: calc(var(--height) * 0.1);\n    --thumb-size: calc(var(--height) - 2 * var(--padding));\n    position: relative;\n    appearance: none;\n    display: block;\n    margin: 0;\n    width: calc(2 * (var(--thumb-size) + var(--padding)));\n    height: calc(var(--thumb-size) + 2 * var(--padding));\n    background: var(--color-neutral);\n    border-radius: var(--thumb-size);\n    transition: background-color 100ms linear;\n    padding: var(--padding);\n    &:checked {\n      background: var(--color-accent);\n    }\n    &::before {\n      content: '';\n      display: block;\n      position: absolute;\n      transform: translateY(-50%);\n      top: 50%;\n      left: var(--padding);\n      width: var(--thumb-size);\n      aspect-ratio: 1 / 1;\n      border-radius: var(--thumb-size);\n      background: white;\n      transition: transform 100ms linear;\n    }\n    &:checked::before {\n      transform: translate(100%, -50%);\n    }\n  }\n}\n\n.text-field {\n  display: block;\n  & input {\n    display: block;\n    margin-block-start: 0.5rem;\n    width: 100%;\n    height: 2.5rem;\n    padding: 0 0.5rem;\n    border-radius: 0.5rem;\n    border: 1px solid var(--color-border);\n    background: var(--color-background);\n    color: var(--color-text);\n    font-size: 1rem;\n  }\n}\n\n.button {\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  height: 2.5rem;\n  padding: 0 1.5rem;\n  font-size: 1rem;\n  border-radius: 0.5rem;\n  border: none;\n  background: var(--color-accent);\n  color: white;\n  transition: background-color 100ms linear;\n  cursor: pointer;\n  &:not(:disabled):hover {\n    background: var(--color-accent--hover);\n  }\n  &:disabled {\n    background: var(--color-accent--disabled);\n    cursor: not-allowed;\n  }\n  &[data-fullwidth] {\n    width: 100%;\n  }\n}\n\n.table {\n  width: 100%;\n  border-collapse: collapse;\n  & th,\n  & td {\n    padding: 0.5rem 1rem;\n    border: 1px solid var(--color-border);\n    min-width: 100px;\n    text-align: left;\n  }\n  & thead {\n    background: var(--color-border);\n    color: #fff;\n  }\n  & th {\n    border: 1px solid #fff;\n  }\n  & tr:nth-child(even) {\n    background: var(--color-background);\n  }\n  & tbody tr:hover {\n    background: var(--color-background--hover);\n  }\n}\n\n#app {\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  justify-content: center;\n  column-gap: 2rem;\n}\n\n.game-field {\n  display: block;\n  background: var(--color-background);\n  border: 2px solid var(--color-border);\n  order: -1;\n}\n\n.sidebar {\n  width: 300px;\n  min-width: 300px;\n  padding: 1rem;\n  border: 1px solid var(--color-border);\n  .sidebar-display {\n    position: relative;\n    padding: 1rem;\n    border: 1px solid var(--color-border);\n  }\n  & .record {\n    position: absolute;\n    top: 0.5rem;\n    right: 0.5rem;\n    font-size: 1.2rem;\n    &::after {\n      content: attr(data-record);\n      margin-inline-start: 0.5rem;\n    }\n  }\n  & .score::after {\n    content: attr(data-score);\n    margin-inline-start: 0.5rem;\n  }\n  & .balls::after {\n    content: attr(data-balls);\n    margin-inline-start: 0.5rem;\n  }\n  & .score,\n  & .balls {\n    font-size: 2.5rem;\n    margin-top: 1.2rem;\n  }\n  .sidebar-menu {\n    margin-block-start: 2rem;\n    display: flex;\n    flex-direction: column;\n    row-gap: 1rem;\n  }\n  .sidebar-menu-item {\n    padding: 0.3rem 0.5rem;\n    list-style: none;\n    font-size: 1.5rem;\n    cursor: pointer;\n    display: flex;\n    column-gap: 1rem;\n    & svg {\n      width: auto;\n      height: 2rem;\n    }\n    &:hover {\n      background: var(--color-background--hover);\n      transition: all 150ms ease-in-out;\n    }\n  }\n}\n\n.settings-dialog-content {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 1.5rem;\n}\n\n.new-record-dialog {\n  & [data-score] {\n    font-size: 1.5rem;\n    margin-block-end: 1rem;\n    &::after {\n      content: attr(data-score);\n      margin-inline-start: 0.5rem;\n    }\n  }\n\n  & form {\n    display: flex;\n    flex-direction: column;\n    row-gap: 1rem;\n  }\n}\n\n.game-over-dialog {\n  & [data-score] {\n    font-size: 1.5rem;\n    margin-block-end: 1rem;\n    &::after {\n      content: attr(data-score);\n      margin-inline-start: 0.5rem;\n    }\n  }\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:[":root {\n  --color-accent: oklch(0.6 0.1 120);\n  --color-accent--hover: oklch(from var(--color-accent) calc(l - 0.1) c h);\n  --color-accent--disabled: color-mix(\n    in oklch,\n    var(--color-accent),\n    transparent 40%\n  );\n  --color-neutral: oklch(from var(--color-accent) 0.9 7% h);\n  --color-text: oklch(from var(--color-accent) 0 c h);\n  --color-background: oklch(from var(--color-accent) 1 3% h);\n  --color-background--hover: color-mix(\n    in oklch,\n    var(--color-background),\n    black 8%\n  );\n  --color-border: oklch(from var(--color-accent) l 5% h);\n  --color-link: oklch(from var(--color-accent) l c 230);\n  --color-link--hover: oklch(from var(--color-link) calc(l - 0.2) c h);\n\n  --font-regular: 400;\n  --font-medium: 500;\n  --font-bold: 600;\n\n  --z-dialog: 50;\n}\n\n*,\n*::before,\n*::after {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\n:where(button, input, select, textarea, a, area):focus-visible {\n  outline: 2px solid color-mix(in oklch, var(--color-accent), transparent 50%);\n  outline-offset: 2px;\n}\n\na {\n  color: var(--color-link);\n  &:hover {\n    color: var(--color-link--hover);\n  }\n}\n\nbody {\n  color-scheme: light dark;\n  font-family: Nunito, sans-serif;\n  font-weight: var(--font-regular);\n  color: var(--color-text);\n  background: var(--color-background);\n  &.dark {\n    --color-text: oklch(from var(--color-accent) l 15% h);\n    --color-background: oklch(from var(--color-accent) 0.2 5% h);\n    --color-border: oklch(from var(--color-accent) 0.5 5% h);\n    --color-background--hover: color-mix(\n      in oklch,\n      var(--color-background),\n      white 10%\n    );\n    --color-neutral: oklch(from var(--color-accent) 0.6 7% h);\n  }\n}\n\n.dialog {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: var(--z-dialog);\n  transform: translate(-50%, -50%);\n  padding: 1rem;\n  min-width: 30rem;\n  max-width: 60rem;\n  background: var(--color-background);\n  color: var(--color-text);\n  border-radius: 0.5rem;\n  border: 1px solid var(--color-border);\n  &::backdrop {\n    background: rgba(0 0 0 / 0.3);\n    backdrop-filter: blur(0.25rem);\n  }\n  & .dialog-title {\n    font-size: 1.5rem;\n    font-weight: var(--font-bold);\n    color: var(--color-text);\n    margin-block-end: 2rem;\n  }\n  & .dialog-close {\n    position: absolute;\n    top: 0.5rem;\n    right: 0.5rem;\n    border: none;\n    background: none;\n    cursor: pointer;\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    width: 2.5rem;\n    aspect-ratio: 1 / 1;\n    font-size: 1.5rem;\n    border-radius: 0.5rem;\n    color: var(--color-text);\n  }\n}\n\n.switch {\n  display: inline-flex;\n  align-items: center;\n  gap: 1rem;\n  font-size: 1.25rem;\n  color: var(--color-text);\n  & input[type='checkbox'] {\n    --height: 2rem;\n    --padding: calc(var(--height) * 0.1);\n    --thumb-size: calc(var(--height) - 2 * var(--padding));\n    position: relative;\n    appearance: none;\n    display: block;\n    margin: 0;\n    width: calc(2 * (var(--thumb-size) + var(--padding)));\n    height: calc(var(--thumb-size) + 2 * var(--padding));\n    background: var(--color-neutral);\n    border-radius: var(--thumb-size);\n    transition: background-color 100ms linear;\n    padding: var(--padding);\n    &:checked {\n      background: var(--color-accent);\n    }\n    &::before {\n      content: '';\n      display: block;\n      position: absolute;\n      transform: translateY(-50%);\n      top: 50%;\n      left: var(--padding);\n      width: var(--thumb-size);\n      aspect-ratio: 1 / 1;\n      border-radius: var(--thumb-size);\n      background: white;\n      transition: transform 100ms linear;\n    }\n    &:checked::before {\n      transform: translate(100%, -50%);\n    }\n  }\n}\n\n.text-field {\n  display: block;\n  & input {\n    display: block;\n    margin-block-start: 0.5rem;\n    width: 100%;\n    height: 2.5rem;\n    padding: 0 0.5rem;\n    border-radius: 0.5rem;\n    border: 1px solid var(--color-border);\n    background: var(--color-background);\n    color: var(--color-text);\n    font-size: 1rem;\n  }\n}\n\n.button {\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  height: 2.5rem;\n  padding: 0 1.5rem;\n  font-size: 1rem;\n  border-radius: 0.5rem;\n  border: none;\n  background: var(--color-accent);\n  color: white;\n  transition: background-color 100ms linear;\n  cursor: pointer;\n  &:not(:disabled):hover {\n    background: var(--color-accent--hover);\n  }\n  &:disabled {\n    background: var(--color-accent--disabled);\n    cursor: not-allowed;\n  }\n  &[data-fullwidth] {\n    width: 100%;\n  }\n}\n\n.table {\n  width: 100%;\n  border-collapse: collapse;\n  & th,\n  & td {\n    padding: 0.5rem 1rem;\n    border: 1px solid var(--color-border);\n    min-width: 100px;\n    text-align: left;\n  }\n  & thead {\n    background: var(--color-border);\n    color: #fff;\n  }\n  & th {\n    border: 1px solid #fff;\n  }\n  & tr:nth-child(even) {\n    background: var(--color-background);\n  }\n  & tbody tr:hover {\n    background: var(--color-background--hover);\n  }\n}\n\n#app {\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  justify-content: center;\n  column-gap: 2rem;\n}\n\n.game-field {\n  display: block;\n  background: var(--color-background);\n  border: 2px solid var(--color-border);\n  order: -1;\n}\n\n.sidebar {\n  width: 300px;\n  min-width: 300px;\n  padding: 1rem;\n  border: 1px solid var(--color-border);\n  .sidebar-display {\n    position: relative;\n    padding: 1rem;\n    border: 1px solid var(--color-border);\n  }\n  & .record {\n    position: absolute;\n    top: 0.5rem;\n    right: 0.5rem;\n    font-size: 1.2rem;\n    &::after {\n      content: attr(data-record);\n      margin-inline-start: 0.5rem;\n    }\n  }\n  & .score::after {\n    content: attr(data-score);\n    margin-inline-start: 0.5rem;\n  }\n  & .balls::after {\n    content: attr(data-balls);\n    margin-inline-start: 0.5rem;\n  }\n  & .score,\n  & .balls {\n    font-size: 2.5rem;\n    margin-top: 1.2rem;\n  }\n  .sidebar-menu {\n    margin-block-start: 2rem;\n    display: flex;\n    flex-direction: column;\n    row-gap: 1rem;\n  }\n  .sidebar-menu-item {\n    padding: 0.3rem 0.5rem;\n    list-style: none;\n    font-size: 1.5rem;\n    cursor: pointer;\n    display: flex;\n    column-gap: 1rem;\n    & svg {\n      width: auto;\n      height: 2rem;\n    }\n    &:hover {\n      background: var(--color-background--hover);\n      transition: all 150ms ease-in-out;\n    }\n  }\n}\n\n.settings-dialog-content {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 1.5rem;\n}\n\n.new-record-dialog {\n  & [data-score] {\n    font-size: 1.5rem;\n    margin-block-end: 1rem;\n    &::after {\n      content: attr(data-score);\n      margin-inline-start: 0.5rem;\n    }\n  }\n\n  & form {\n    display: flex;\n    flex-direction: column;\n    row-gap: 1rem;\n  }\n}\n\n.game-over-dialog {\n  & [data-score] {\n    font-size: 1.5rem;\n    margin-block-end: 1rem;\n    &::after {\n      content: attr(data-score);\n      margin-inline-start: 0.5rem;\n    }\n  }\n}\n"],sourceRoot:""}]);const a=s},314:t=>{t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var e="",o=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),o&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=t(n),o&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(t,e,o,i,r){"string"==typeof t&&(t=[[null,t,void 0]]);var s={};if(o)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(s[c]=!0)}for(var l=0;l<t.length;l++){var d=[].concat(t[l]);o&&s[d[0]]||(void 0!==r&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=r),e&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=e):d[2]=e),i&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=i):d[4]="".concat(i)),n.push(d))}},n}},354:t=>{t.exports=function(t){var n=t[1],e=t[3];if(!e)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */");return[n].concat([r]).join("\n")}return[n].join("\n")}},540:t=>{t.exports=function(t){var n=document.createElement("style");return t.setAttributes(n,t.attributes),t.insert(n,t.options),n}},659:t=>{var n={};t.exports=function(t,e){var o=function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}n[t]=e}return n[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},825:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=t.insertStyleElement(t);return{update:function(e){!function(t,n,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var i=void 0!==e.layer;i&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,i&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var r=e.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleTagTransform(o,t,n.options)}(n,t,e)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)}}}}},n={};function e(o){var i=n[o];if(void 0!==i)return i.exports;var r=n[o]={id:o,exports:{}};return t[o](r,r.exports,e),r.exports}e.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},e.d=(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),e.nc=void 0;var o=e(72),i=e.n(o),r=e(825),s=e.n(r),a=e(659),c=e.n(a),l=e(56),d=e.n(l),A=e(540),h=e.n(A),u=e(113),m=e.n(u),p=e(208),b={};b.styleTagTransform=m(),b.setAttributes=d(),b.insert=c().bind(null,"head"),b.domAPI=s(),b.insertStyleElement=h(),i()(p.A,b),p.A&&p.A.locals&&p.A.locals;const C={ROWS:10,COLUMNS:6,INTERVAL_SIZE:4,BLOCK_WIDTH:96,BLOCK_HEIGHT:54,BLOCK_DARK_COLOR:"#fe494f",BLOCK_NORMAL_COLOR:"#fe755c",BLOCK_LIGHT_COLOR:"#f29e74",BALL_RADIUS:10,BALL_SPEED:10,BALL_SHOOT_TIMEOUT:100,BALL_COLOR:"#5aa7f3",BONUS_RADIUS:12,BONUS_COLOR:"#3ad361",AIM_COLOR:"#a7bed3",SHADOW_COLOR:"#cccccc",MAX_RECORDS_COUNT:20};class g{constructor(t,n){this.x=t,this.y=n}}class f{constructor(t,n,e,o){this.context=t,this.position=n,this.width=e,this.height=o,this.vx=0,this.vy=0}draw(t=!1){this.context.save(),t?this.context.fill():this.context.stroke(),this.context.restore()}clear(){this.context.clearRect(this.position.x-this.context.lineWidth,this.position.y-this.context.lineWidth,this.width+2*this.context.lineWidth,this.height+2*this.context.lineWidth)}move(){this.position.x+=this.vx,this.position.y+=this.vy}moveOn(t,n){this.position.x+=t,this.position.y+=n}moveTo(t,n){this.position.x=t,this.position.y=n}setVx(t){this.vx=t}setVy(t){this.vy=t}setPosition(t){this.position=t}}class B extends f{draw(t=!1){this.context.beginPath(),this.context.rect(this.position.x,this.position.y,this.width,this.height),super.draw(t)}}class v extends f{get center(){return new g(this.position.x+Math.floor(this.width/2),this.position.y+Math.floor(this.height/2))}draw(t=!1){this.context.beginPath(),this.context.ellipse(this.position.x+Math.floor(this.width/2),this.position.y+Math.floor(this.height/2),Math.floor(this.width/2),Math.floor(this.height/2),0,0,2*Math.PI),super.draw(t)}}class E extends v{constructor(t,n,e){super(t,n,2*e,2*e),this.radius=e}}class x extends f{constructor(t,n,e){super(t,n,Math.abs(n.x-e.x),Math.abs(n.y-e.y)),this.begin=n,this.end=e}draw(){this.context.beginPath(),this.context.moveTo(this.begin.x,this.begin.y),this.context.lineTo(this.end.x,this.end.y),super.draw(!1)}setDash(t){this.context.setLineDash(t)}}function w(t,n={},e=[]){const o=document.createElement(t);for(const[t,e]of Object.entries(n))o.setAttribute(t,e);for(const t of e)t&&("string"==typeof t?o.innerHTML+=t:o.appendChild(t));return o}const k={balls:[],blocks:[],bonuses:[]};k.field=w("canvas",{id:"game-field",class:"game-field",width:C.COLUMNS*C.BLOCK_WIDTH+(C.COLUMNS-1)*C.INTERVAL_SIZE,height:C.ROWS*C.BLOCK_HEIGHT+(C.ROWS-1)*C.INTERVAL_SIZE}),k.context=k.field.getContext("2d"),k.aim=new class{constructor(t,n){this.context=t,this.origin=n,this.vx=0,this.vy=0,this.isActive=!1,this.isBlocked=!1}setOrigin(t){this.origin=t}handleMouseMove(t){const{x:n,y:e}=function(t){const n=t.target.getBoundingClientRect();return new g(t.clientX-n.left,t.clientY-n.top)}(t),o=this.origin.x,i=this.origin.y;this.vx=n-o,this.vy=e-i}draw(t){this.context.save();const n=new g(this.origin.x+9999*this.vx,this.origin.y+9999*this.vy),e=new x(this.context,this.origin,n);this.context.strokeStyle=t,this.context.lineWidth=3,e.setDash([10,10]),e.draw(),this.context.restore()}}(k.context,new g(k.field.width/2,k.field.height-C.BALL_RADIUS));const y=k,I={level:1,startPosition:new g(y.field.width/2-C.BALL_RADIUS,y.field.height-2*C.BALL_RADIUS-1),newBallsCount:0,requests:[],timeouts:[],aimingEnabled:!0,soundOn:!0,darkModeEnabled:!1};function O(...t){return t?.filter(Boolean).join(" ")}function S(t,n={},e=[]){const o=w("button",{class:"dialog-close",type:"button"},["&times;"]);o.addEventListener("click",(()=>{r.close()}));const i=w("h2",{class:"dialog-title"},[t.title]),r=w("dialog",{...n,class:O("dialog",n.class)},[o,i,...e]);return r}function M(t,n={}){const e=w("input",{...n,type:"checkbox"});return w("label",{class:"switch"},[e,t.label])}function D(t,n=[]){return w("th",t,n)}function L(t={},n=[]){return w("button",{...t,class:O(t.class,"button")},n)}const j=w("aside",{class:"sidebar"},[w("h1",{},["Brick Breaker"]),w("div",{class:"sidebar-display"},[w("div",{class:"record","data-record":"0"},["Record:"]),w("div",{class:"score","data-score":"0"},["Score:"]),w("div",{class:"balls","data-balls":"1"},["Balls:"])]),w("ul",{class:"sidebar-menu"},[w("li",{class:"sidebar-menu-item","data-item":"settings"},['<svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M10.325 4.317c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756 .426 1.756 2.924 0 3.35a1.724 1.724 0 0 0 -1.066 2.573c.94 1.543 -.826 3.31 -2.37 2.37a1.724 1.724 0 0 0 -2.572 1.065c-.426 1.756 -2.924 1.756 -3.35 0a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065z" /><path d="M9 12a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" /></svg>\n',w("span",{},["Settings"])]),w("li",{class:"sidebar-menu-item","data-item":"best-players"},['<svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="currentColor"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M8.243 7.34l-6.38 .925l-.113 .023a1 1 0 0 0 -.44 1.684l4.622 4.499l-1.09 6.355l-.013 .11a1 1 0 0 0 1.464 .944l5.706 -3l5.693 3l.1 .046a1 1 0 0 0 1.352 -1.1l-1.091 -6.355l4.624 -4.5l.078 -.085a1 1 0 0 0 -.633 -1.62l-6.38 -.926l-2.852 -5.78a1 1 0 0 0 -1.794 0l-2.853 5.78z" /></svg>\n',w("span",{},["Best players"])]),w("li",{class:"sidebar-menu-item","data-item":"about"},['<svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="currentColor"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M12 2c5.523 0 10 4.477 10 10a10 10 0 0 1 -19.995 .324l-.005 -.324l.004 -.28c.148 -5.393 4.566 -9.72 9.996 -9.72zm0 9h-1l-.117 .007a1 1 0 0 0 0 1.986l.117 .007v3l.007 .117a1 1 0 0 0 .876 .876l.117 .007h1l.117 -.007a1 1 0 0 0 .876 -.876l.007 -.117l-.007 -.117a1 1 0 0 0 -.764 -.857l-.112 -.02l-.117 -.006v-3l-.007 -.117a1 1 0 0 0 -.876 -.876l-.117 -.007zm.01 -3l-.127 .007a1 1 0 0 0 0 1.986l.117 .007l.127 -.007a1 1 0 0 0 0 -1.986l-.117 -.007z" /></svg>\n',w("span",{},["About"])])])]),_=S({title:"Settings"},{},[w("div",{class:"settings-dialog-content"},[M({label:"Sound"},{id:"sound",checked:!0}),M({label:"Aiming"},{id:"aiming",checked:!0}),M({label:"Dark mode"},{id:"dark-mode"})])]),R=S({title:"Best players"},{},[function(t,n=[]){return w("table",{...t,class:O("table",t.class)},n)}({},[function(t,n=[]){return w("thead",t,n)}({},[function(t,n=[]){return w("tr",t,n)}({},[D({},["#"]),D({},["Name"]),D({},["Score"]),D({},["Date"])])]),function(t,n=[]){return w("tbody",void 0,n)}()])]),T=S({title:"About"},{},[w("p",{},["Created by&nbsp;",w("a",{href:"https://github.com/lid0a",target:"_blank"},["lid0a"]),"&nbsp;for the&nbsp;",w("a",{href:"https://rs.school",target:"_blank"},["Rolling Scopes School"])])]),z=S({title:"Game over!"},{class:"game-over-dialog"},[w("div",{"data-score":0},["Score:"]),L({"data-new-game":!0},["New game"])]),q=S({title:"New record!"},{class:"new-record-dialog"},[w("div",{"data-score":0},["Score:"]),w("form",{},[function(t={},n={}){const e=w("input",{...n,type:"text"});return w("label",{class:"text-field"},[t.label,e])}({label:"Enter your name"},{name:"name",required:!0}),L({type:"submit"},["Save"])])]);document.body.append(_),document.body.append(R),document.body.append(T),document.body.append(z),document.body.append(q),document.querySelector("#app").append(j);const U={scoreElements:document.querySelectorAll("[data-score]"),ballsElement:document.querySelector(".balls"),recordElement:document.querySelector(".record"),settingsMenuItemElement:document.querySelector("[data-item='settings']"),bestPlayersMenuItemElement:document.querySelector("[data-item='best-players']"),aboutMenuItemElement:document.querySelector("[data-item='about']"),blockBumpSound:new Audio("./public/audio/block-bump.mp3"),bonusBumpSound:new Audio("./public/audio/bonus-bump.mp3"),newStageSound:new Audio("./public/audio/new-stage.mp3"),gameOverSound:new Audio("./public/audio/game-over.mp3"),settingsDialog:_,bestPlayersDialog:R,aboutDialog:T,gameOverDialog:z,newRecordDialog:q};U.gameOverDialog.querySelector("button").addEventListener("click",(()=>{U.gameOverDialog.showModal()})),U.settingsMenuItemElement.addEventListener("click",(()=>{U.settingsDialog.showModal()})),U.bestPlayersMenuItemElement.addEventListener("click",(()=>{U.bestPlayersDialog.showModal()})),U.aboutMenuItemElement.addEventListener("click",(()=>{U.aboutDialog.showModal()}));const W=U;class N extends B{constructor(t,n,e,o,i){super(t,n,e,o),this.hp=i}draw(t){return this.context.save(),this.context.fillStyle=t,this.context.shadowColor=C.SHADOW_COLOR,this.context.shadowOffsetX=4,this.context.shadowOffsetY=4,super.draw(!0),this.context.shadowColor="transparent",this.context.fillStyle="#ffffff",this.context.font="1.2rem monospace",this.context.textAlign="center",this.context.textBaseline="middle",this.context.fillText(`${this.hp}`,this.position.x+this.width/2,this.position.y+this.height/2),this.context.restore(),this}}class H extends E{constructor(t,n,e){super(t,n,e),this.speed=0}setSpeed(t){this.speed=t}stop(){this.vx=0,this.vy=0}normalizeSpeed(){Math.abs(this.vy)<1&&(this.vx=+(.8*this.speed).toFixed(2),this.vy=+(.2*this.speed).toFixed(2))}draw(t){this.context.save(),this.context.fillStyle=t,super.draw(!0),this.context.restore()}}class F extends E{draw(t){this.context.save(),this.context.lineWidth=Math.floor(.3*this.radius),this.context.strokeStyle=t,this.context.fillStyle=t,this.context.shadowColor=C.SHADOW_COLOR,this.context.shadowOffsetX=4,this.shadowOffsetY=4,this.context.beginPath(),super.draw(!1),this.context.beginPath(),this.context.ellipse(this.position.x+this.radius,this.position.y+this.radius,Math.floor(.5*this.radius),Math.floor(.5*this.radius),0,0,2*Math.PI),this.context.fill(),this.context.restore()}}const P={options:C,objects:y,state:I,DOMElements:W,DBManager:new class{constructor(t){this.url=t}async addRecord(t){try{const n=await fetch(this.url,{method:"POST",body:JSON.stringify(t),headers:{"Content-Type":"application/json"}});return await n.json()}catch(t){return console.error(t),null}}async getRecords(){try{const t=await fetch(this.url,{method:"GET",headers:{"Content-Type":"application/json"}}),n=await t.json();return n?Object.keys(n).map((t=>({...n[t]}))):[]}catch(t){return console.error(t),null}}}("https://swipe-brick-breaker-52559-default-rtdb.firebaseio.com/players.json"),highScores:null};function K(t){P.handleMouseDown(t)}function Y(t){P.handleMouseMove(t)}function G(t){P.handleMouseUp(t)}P.createBlocksAndBonus=function(){const t=function(t,n){const e=[];let o=0;return function t(){if(o>=n-0)throw new Error(`Too much calls. This function can be called no more than ${n-0-1} times`);const i=Math.floor(0+Math.random()*(n-0));return e.includes(i)?t():(e.push(i),++o,i)}}(0,this.options.COLUMNS);let n=2;const e=t=>t[Math.floor(Math.random()*t.length)];this.state.level>100?n=e([2,3,4,5]):this.state.level>50?n=e([2,3,4]):this.state.level>20&&(n=e([2,3]));for(let e=0;e<n;++e){const n=t()*(this.options.BLOCK_WIDTH+this.options.INTERVAL_SIZE),e=this.options.BLOCK_HEIGHT+this.options.INTERVAL_SIZE,o=new N(this.objects.context,new g(n,e),this.options.BLOCK_WIDTH,this.options.BLOCK_HEIGHT,this.state.level);o.draw(this.setBlockColor(o)),this.objects.blocks.push(o)}const o=t()*(this.options.BLOCK_WIDTH+this.options.INTERVAL_SIZE)+this.options.BLOCK_WIDTH/2-this.options.BONUS_RADIUS,i=this.options.BLOCK_HEIGHT+this.options.INTERVAL_SIZE+this.options.BLOCK_HEIGHT/2-this.options.BONUS_RADIUS,r=new F(this.objects.context,new g(o,i),this.options.BONUS_RADIUS);r.draw(this.options.BONUS_COLOR),this.objects.bonuses.push(r)},P.createBall=function(){const t=new H(this.objects.context,new g(this.state.startPosition.x,this.state.startPosition.y),this.options.BALL_RADIUS);t.setSpeed(this.options.BALL_SPEED),t.draw(this.options.BALL_COLOR),this.objects.balls.push(t)},P.strictClearField=function(){this.objects.context.clearRect(0,0,this.objects.field.width,this.objects.field.height)},P.trailingClearField=function(){this.objects.context.save();const t=getComputedStyle(this.objects.field).getPropertyValue("--color-background");this.objects.context.fillStyle=t,this.objects.context.fillRect(0,0,this.objects.field.width,this.objects.field.height),this.objects.context.restore()},P.redrawObjects=function(){this.trailingClearField(),this.objects.aim.isActive&&this.state.aimingEnabled&&this.objects.aim.draw(this.options.AIM_COLOR),this.objects.bonuses.forEach((t=>{t.draw(this.options.BONUS_COLOR)})),this.objects.balls.forEach((t=>{t.draw(this.options.BALL_COLOR)})),this.objects.blocks.forEach((t=>{t.draw(this.setBlockColor(t))}))},P.placeBalls=function(){this.objects.balls.forEach((t=>{t.position=new g(this.state.startPosition.x,this.state.startPosition.y)}))},P.setBlockColor=function(t){const{hp:n}=t,{level:e}=this.state;let o=null;return o=n<=.3*e?this.options.BLOCK_LIGHT_COLOR:n<=.6*e?this.options.BLOCK_NORMAL_COLOR:this.options.BLOCK_DARK_COLOR,o},P.gameOver=function(){return this.objects.blocks.some((t=>t.position.y+t.height===this.objects.field.height))},P.updateUI=function(){this.DOMElements.scoreElements.forEach((t=>{t.dataset.score=this.state.level-1})),this.DOMElements.ballsElement.dataset.balls=this.objects.balls.length,this.highScores.then((t=>{const n=t.reduce(((n,e,o)=>(this.DOMElements.recordElement.dataset.record=t.length?t[0].score:0,n+`\n        <tr>\n          <td>${o+1}</td>\n          <td>${e.name}</td>\n          <td>${e.score}</td>\n          <td>${function(t){const n=new Date(t),e=n.getFullYear(),o=n.getMonth()+1,i=n.getDate();return`${i<10?`0${i}`:i}.${o<10?`0${o}`:o}.${e}`}(e.date)}</td>\n        </tr>\n      `)),"");this.DOMElements.bestPlayersDialog.querySelector("tbody").innerHTML=n}))},P.startNewStage=function(){++this.state.level,this.objects.aim.isBlocked=!1;const t=this.options.BLOCK_HEIGHT+this.options.INTERVAL_SIZE;this.objects.blocks.forEach((n=>{n.moveOn(0,t)})),this.objects.bonuses.forEach((n=>{if(n.moveOn(0,t),n.position.y>this.objects.field.height){const t=this.objects.bonuses.indexOf(n);this.objects.bonuses.splice(t,1)}})),this.gameOver()&&(this.highScores.then((t=>function(t,n,e){let o=0,i=t.length-1,r=Math.floor((o+i)/2);for(;o<=i;){if(e>t[r][n])i=r-1;else{if(!(e<t[r][n]))return r;o=r+1}r=Math.floor((o+i)/2)}return o}(t,"score",this.state.level-1))).then((t=>{t<this.options.MAX_RECORDS_COUNT-1?this.DOMElements.newRecordDialog.showModal():this.DOMElements.gameOverDialog.showModal()})),this.playSound(this.DOMElements.gameOverSound)),this.state.newBallsCount>0&&!this.gameOver()&&this.playSound(this.DOMElements.newStageSound),this.createBlocksAndBonus();for(let t=0;t<this.state.newBallsCount;++t)this.createBall();this.state.newBallsCount=0,this.updateUI(),this.placeBalls(),this.objects.aim.setOrigin(new g(this.state.startPosition.x+this.options.BALL_RADIUS,this.objects.field.height-this.options.BALL_RADIUS))},P.handleBallAndBlockCollision=function(t,n){const e=(t,n,e)=>t<=n||t>=e?Math.abs(e-t)<Math.abs(n-t)?e:n:t,o=e(t.center.x,n.position.x,n.position.x+n.width),i=e(t.center.y,n.position.y,n.position.y+n.height);if(r=t.center,s=new g(o,i),Math.sqrt((r.x-s.x)**2+(r.y-s.y)**2)<=t.radius){let e=t.center.x-o,r=t.center.y-i;const s=Math.sqrt(e*e+r*r);if(!(s<=t.radius)||o!==n.position.x&&o!==n.position.x+n.width||i!==n.position.y&&i!==n.position.y+n.height)o!==n.position.x+n.width&&o!==n.position.x||(t.position.x=o===n.position.x+n.width?o:o-t.width,t.vx*=-1),i!==n.position.y+n.height&&i!==n.position.y||(t.position.y=i===n.position.y+n.height?i:i-t.height,t.vy*=-1);else{e/=s,r/=s;const n=t.vx*e+t.vy*r;t.vx-=+(2*n*e).toFixed(2),t.vy-=+(2*n*r).toFixed(2),t.normalizeSpeed()}if(0==--n.hp){const{blocks:t}=this.objects;t.splice(t.indexOf(n),1)}this.playSound(this.DOMElements.blockBumpSound)}var r,s},P.playSound=function(t){this.state.soundOn&&(t.currentTime=0,t.play())},P.handleBallAndWallCollision=function(t){(t.position.x<=0||t.position.x+t.width>=this.objects.field.width)&&(t.position.x=t.position.x<=0?0:this.objects.field.width-t.width,t.vx*=-1),(t.position.y<=0||t.position.y+t.height>this.objects.field.height)&&(t.position.y=t.position.y<=0?0:this.objects.field.height-t.height,t.position.y<=0?t.vy*=-1:t.stop())},P.handleBallAndBonusCollision=function(t,n){if(o=n,(e=t).position.x<=o.position.x+o.width&&e.position.y<=o.position.y+o.height&&e.position.x+e.width>=o.position.x&&e.position.y+e.height>=o.position.y){const t=this.objects.bonuses.indexOf(n);this.objects.bonuses.splice(t,1),++this.state.newBallsCount,this.playSound(this.DOMElements.bonusBumpSound)}var e,o},P.endOfStage=function(){return this.objects.balls.every((t=>t.position.y+t.height>=this.objects.field.height))},P.animate=function(){this.state.requests.push(window.requestAnimationFrame((()=>{this.animate(),this.redrawObjects()})));let t=!0;this.objects.balls.forEach(((n,e)=>{window.requestAnimationFrame((()=>{0===e?n.move():this.state.timeouts.push(window.setTimeout((()=>{n.move()}),this.options.BALL_SHOOT_TIMEOUT*e))})),n.position.y+n.height>this.objects.field.height&&t&&(t=!1,this.state.startPosition=new g(n.position.x,this.state.startPosition.y)),this.handleBallAndWallCollision(n),this.objects.blocks.forEach((t=>{this.handleBallAndBlockCollision(n,t)})),this.objects.bonuses.forEach((t=>{this.handleBallAndBonusCollision(n,t)}))})),this.endOfStage()&&(this.stopAnimation(),this.strictClearField(),this.startNewStage())},P.handleMouseDown=function(t){this.objects.aim.isBlocked||(this.objects.aim.isActive=!0,this.objects.aim.handleMouseMove(t),this.redrawObjects())},P.handleMouseMove=function(t){this.objects.aim.isActive&&!this.objects.aim.isBlocked&&(this.objects.aim.handleMouseMove(t),this.strictClearField(),this.redrawObjects())},P.handleMouseUp=function(){if(!this.objects.aim.isBlocked){this.objects.aim.isActive=!1,this.objects.aim.isBlocked=!0;const t=t=>+(this.options.BALL_SPEED*t/Math.sqrt(this.objects.aim.vx**2+this.objects.aim.vy**2)).toFixed(2);this.objects.balls.forEach((n=>{n.setVx(t(this.objects.aim.vx)),n.setVy(t(this.objects.aim.vy)),n.normalizeSpeed()})),this.state.requests.push(window.requestAnimationFrame((()=>{this.animate()})))}},P.stopAnimation=function(){this.state.requests.forEach((t=>{window.cancelAnimationFrame(t)})),this.state.requests=[],this.state.timeouts.forEach((t=>{window.clearTimeout(t)})),this.state.timeouts=[]},P.init=function(){var t,n;this.highScores=this.DBManager.getRecords().then((t=>t.sort(((t,n)=>n.score-t.score)))).then((t=>t.slice(0,this.options.MAX_RECORDS_COUNT))),t=this.objects.field,(n=document.getElementById("app"))&&n.append(t),this.createBlocksAndBonus(),this.createBall(),this.updateUI(),this.objects.field.addEventListener("mousedown",K),this.objects.field.addEventListener("mousemove",Y),this.objects.field.addEventListener("mouseup",G)},P.reset=function(){this.state.level=1,this.state.startPosition=new g(this.objects.field.width/2-C.BALL_RADIUS,this.objects.field.height-2*C.BALL_RADIUS-1),this.objects.aim.origin=new g(this.state.startPosition.x+this.options.BALL_RADIUS,this.state.startPosition.y+this.options.BALL_RADIUS),this.objects.aim.isActive=!1,this.objects.aim.isBlocked=!1,this.objects.balls=[],this.objects.blocks=[],this.objects.bonuses=[],this.state.timeouts=[],this.state.requests=[],this.state.newBallsCount=0,this.strictClearField(),this.redrawObjects(),this.objects.field.removeEventListener("mousedown",K),this.objects.field.removeEventListener("mousemove",Y),this.objects.field.removeEventListener("mouseup",G),this.objects.field.remove()};const V=P;window.onload=()=>{V.init(),V.DOMElements.gameOverDialog.querySelector("[data-new-game]").addEventListener("click",(()=>{V.reset(),V.init(),V.DOMElements.gameOverDialog.close()})),V.DOMElements.settingsDialog.querySelector("#sound").addEventListener("change",(()=>{V.state.soundOn=!V.state.soundOn})),V.DOMElements.settingsDialog.querySelector("#aiming").addEventListener("change",(()=>{V.state.aimingEnabled=!V.state.aimingEnabled})),V.DOMElements.settingsDialog.querySelector("#dark-mode").addEventListener("change",(()=>{V.state.darkModeEnabled=!V.state.darkModeEnabled;const{body:t}=document,{field:n}=V.objects,e=document.querySelector(".sidebar");V.state.darkModeEnabled?(t.classList.add("dark"),n.classList.add("dark"),e.classList.add("dark"),V.options.SHADOW_COLOR="#1a1717"):(t.classList.remove("dark"),n.classList.remove("dark"),e.classList.remove("dark"),V.options.SHADOW_COLOR="#cccccc"),V.strictClearField(),V.redrawObjects()})),V.DOMElements.newRecordDialog.querySelector("form").addEventListener("submit",(t=>{t.preventDefault();const n=t.currentTarget.name.value,{score:e}=document.querySelector("[data-score]").dataset;V.DBManager.addRecord({name:n,score:e,date:(new Date).toISOString()}),V.DOMElements.newRecordDialog.close(),V.reset(),V.init()}))}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,