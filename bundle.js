(()=>{var t={228:t=>{t.exports=function(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,o=new Array(e);n<e;n++)o[n]=t[n];return o}},646:(t,e,n)=>{var o=n(228);t.exports=function(t){if(Array.isArray(t))return o(t)}},506:t=>{t.exports=function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}},926:t=>{function e(t,e,n,o,r,i,s){try{var a=t[i](s),c=a.value}catch(t){return void n(t)}a.done?e(c):Promise.resolve(c).then(o,r)}t.exports=function(t){return function(){var n=this,o=arguments;return new Promise((function(r,i){var s=t.apply(n,o);function a(t){e(s,r,i,a,c,"next",t)}function c(t){e(s,r,i,a,c,"throw",t)}a(void 0)}))}}},575:t=>{t.exports=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}},913:t=>{function e(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}t.exports=function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}},713:t=>{t.exports=function(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}},525:(t,e,n)=>{var o=n(331);function r(e,n,i){return"undefined"!=typeof Reflect&&Reflect.get?t.exports=r=Reflect.get:t.exports=r=function(t,e,n){var r=o(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}},r(e,n,i||e)}t.exports=r},754:t=>{function e(n){return t.exports=e=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},e(n)}t.exports=e},205:(t,e,n)=>{var o=n(489);t.exports=function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&o(t,e)}},860:t=>{t.exports=function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}},206:t=>{t.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}},585:(t,e,n)=>{var o=n(8),r=n(506);t.exports=function(t,e){return!e||"object"!==o(e)&&"function"!=typeof e?r(t):e}},489:t=>{function e(n,o){return t.exports=e=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},e(n,o)}t.exports=e},331:(t,e,n)=>{var o=n(754);t.exports=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=o(t)););return t}},319:(t,e,n)=>{var o=n(646),r=n(860),i=n(323),s=n(206);t.exports=function(t){return o(t)||r(t)||i(t)||s()}},8:t=>{function e(n){return"function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?t.exports=e=function(t){return typeof t}:t.exports=e=function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(n)}t.exports=e},323:(t,e,n)=>{var o=n(228);t.exports=function(t,e){if(t){if("string"==typeof t)return o(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?o(t,e):void 0}}},757:(t,e,n)=>{t.exports=n(666)},807:(t,e,n)=>{"use strict";n.d(e,{Z:()=>a});var o=n(15),r=n.n(o),i=n(645),s=n.n(i)()(r());s.push([t.id,'*,*::before,*::after{padding:0;margin:0;box-sizing:border-box}body{min-width:950px;background:#e5e5e5;font-family:Nunito, sans-serif;font-size:16px;font-weight:400;font-style:normal;color:#4d5158}.app{position:absolute;left:50%;top:50%;transform:translate(-50%, -50%)}body.dark{background:#231f20;color:#6d6064}h1{text-align:center;font-size:24px;padding:0 0 10px 0}.modal{box-sizing:border-box;background:#fff;z-index:10;font-family:sans-serif;color:#787878}.modal__button{box-sizing:border-box;background:#e47332;display:block;outline:none;padding:10px 15px;border:none;color:#fff;font-size:0.9rem;font-weight:500;cursor:pointer}.modal__button:active{background:#bb5d27}.modal-card{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%) scale(0);transition:all .3s ease-in;padding:20px;max-height:420px;max-width:660px;overflow:auto}.modal-card__title{font-size:28px;padding:5px 0;text-align:center;border-bottom:1px solid #7f8591}.modal-card button{width:100px;margin:30px auto 0 auto}.modal-card__close-button{position:absolute;top:0;right:0;padding:2px 7px;font-size:24px;cursor:pointer;transition:all .2s ease-in-out}.modal-card__close-button:hover{background:#ac120c;color:#fff}.modal-card.active{transform:translate(-50%, -50%) scale(1)}.switch{position:relative;display:inline-block}.switch input{opacity:0;width:0;height:0}.switch-slider{position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0;background-color:#ccc;transition:.4s}.switch-slider::before{position:absolute;content:"";background-color:white;border-radius:50%;transition:.4s}input:checked+.switch-slider{background-color:#2196f3}.game-field{display:block;background:#e5e5e5;border:2px solid #7f8591;order:-1}.game-field.dark{background:#231f20;border-color:#544a4d}.game-over{position:absolute;top:calc(-1 * 320px);left:calc(50vw - 500px / 2);width:500px;height:320px;font-family:Roboto, sans-serif;transition:transform .3s ease-in}.game-over.active{transform:translateY(calc(320px / 2 + 50vh))}.game-over__title{text-align:center;margin-top:50px;font-size:28px;font-weight:500}.game-over__score{text-align:center;margin-top:20px;font-size:22px;color:#333}.game-over__score::after{content:attr(data-score)}.game-over__new-game-btn{margin:90px auto;font-size:18px;padding:12px 18px;border:none}.new-record__form input{display:block;margin:40px auto 0 auto;background:none;border:1px solid #7f8591;padding:10px;font-size:18px;outline:none;color:#4d5158}.new-record__form input:focus{border-width:2px}.new-record__form button{display:block;width:110px;margin:30px auto}.overlay{box-sizing:border-box;display:none;position:absolute;top:0;left:0;right:0;bottom:0;background:rgba(0,0,0,0.7);pointer-events:none}.overlay.active{display:block;pointer-events:all}.settings{width:400px;text-align:center;padding:20px}.settings .item{display:flex;width:100%;justify-content:space-between;margin-top:20px;font-size:22px}.switch{width:50px;height:28px}.switch-slider{border-radius:28px}.switch-slider::before{height:24px;width:24px;left:2px;bottom:2px}input:checked+.switch-slider:before{transform:translateX(22px)}.table-container{min-width:600px;height:320px;overflow:auto}.best-players__table{margin:30px auto 0 auto;border-collapse:collapse}.best-players__table th,.best-players__table td{padding:5px 10px;border:1px solid #7f8591;min-width:100px;text-align:center}.best-players__table thead{background:#7f8591;color:#fff}.best-players__table th{border:1px solid #fff;padding:15px}.best-players__table tr:nth-child(2n){background:#e5e5e5}.best-players__table tr:hover{background:#4d5158;color:#fff}.about{width:450px;font-size:18px;line-height:1.4em}.about .contact-me{margin-top:45px;text-transform:uppercase;font-size:22px}.about a{color:#4d5158}.about a:hover{color:#222;text-decoration:underline}.about a:active{color:#c13b31}.about li{list-style:none;padding:10px 0}.about li i{margin-right:10px}.about p{margin-top:30px}.about ul{margin-top:15px}.about ul a{text-decoration:none}.sidebar{width:300px;min-width:300px;padding:1rem;border:1px solid #7f8591}.sidebar__display{position:relative;padding:2rem .8rem;border:1px solid #7f8591}.sidebar .record{position:absolute;top:.5rem;right:.5rem;font-size:1.2rem}.sidebar .record::after{content:attr(data-record)}.sidebar .score::after{content:attr(data-score)}.sidebar .balls::after{content:attr(data-balls)}.sidebar .score,.sidebar .balls{font-size:2.5rem;margin-top:1.2rem}.sidebar.dark{border-color:#544a4d}.sidebar.dark .sidebar__display{border-color:#544a4d}.sidebar.dark .menu__item:hover{background:#544a4d}.menu{margin-top:3rem}.menu__item{padding:.3rem .5rem;margin-top:2rem;list-style:none;font-size:1.5rem;cursor:pointer}.menu__item span{margin-left:.5rem}.menu__item:hover{background:#7f8591;transition:all .2s ease-in-out;color:#fff}.app{display:flex;justify-content:center;column-gap:2rem}\n',"",{version:3,sources:["webpack://./src/scss/_reset.scss","webpack://./src/scss/_constants.scss","webpack://./src/scss/components/_modal.scss","webpack://./src/scss/components/_modal-card.scss","webpack://./src/scss/components/_switch.scss","webpack://./src/scss/_game-field.scss","webpack://./src/scss/_game-over.scss","webpack://./src/scss/_new-record.scss","webpack://./src/scss/_overlay.scss","webpack://./src/scss/_settings.scss","webpack://./src/scss/_settings-switch.scss","webpack://./src/scss/_best-players.scss","webpack://./src/scss/_about.scss","webpack://./src/scss/_sidebar.scss","webpack://./src/scss/style.scss"],names:[],mappings:"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",sourcesContent:["*, *::before, *::after {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  min-width: 950px;\n  background: $background-color;\n  font-family: Nunito, sans-serif;\n  font-size: 16px;\n  font-weight: 400;\n  font-style: normal;\n  color: $text-color;\n}\n\n.app {\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n}\n\nbody.dark {\n  background: $background-color-dark;\n  color: $text-color-dark;\n}\n\nh1 {\n  text-align: center;\n  font-size: 24px;\n  padding: 0 0 10px 0;\n}\n","$overlay-color: rgba(0, 0, 0, 0.7);\n$border-color: #7f8591;\n$text-color: #4d5158;\n$background-color: #e5e5e5;\n\n$background-color-dark: #231f20;\n$border-color-dark: #544a4d;\n$text-color-dark: #6d6064;\n",".modal {\n  box-sizing: border-box;\n  background: #fff;\n  z-index: 10;\n  font-family: sans-serif;\n  color: #787878;\n  &__button {\n    box-sizing: border-box;\n    background: #e47332;\n    display: block;\n    outline: none;\n    padding: 10px 15px;\n    border: none;\n    color: #fff;\n    font-size: 0.9rem;\n    font-weight: 500;\n    cursor: pointer;\n    &:active {\n      background: #bb5d27;\n    }\n  }\n}\n","$close-button-hover-color: #ac120c;\n\n.modal-card {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%) scale(0);\n  transition: all .3s ease-in;\n  padding: 20px;\n  max-height: 420px;\n  max-width: 660px;\n  overflow: auto;\n  &__title {\n    font-size: 28px;\n    padding: 5px 0;\n    text-align: center;\n    border-bottom: 1px solid $border-color;\n  }\n  button {\n    width: 100px;\n    margin: 30px auto 0 auto;\n  }\n  &__close-button {\n    position: absolute;\n    top: 0;\n    right: 0;\n    padding: 2px 7px;\n    font-size: 24px;\n    cursor: pointer;\n    transition: all .2s ease-in-out;\n    &:hover {\n      background: $close-button-hover-color;\n      color: #fff;\n    }\n  }\n  &.active {\n    transform: translate(-50%, -50%) scale(1);\n  }\n}\n",'.switch {\n  position: relative;\n  display: inline-block;\n}\n\n.switch input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n.switch-slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #ccc;\n  transition: .4s;\n}\n\n.switch-slider::before {\n  position: absolute;\n  content: "";\n  background-color: white;\n  border-radius: 50%;\n  transition: .4s;\n}\n\ninput:checked + .switch-slider {\n  background-color: #2196f3;\n}\n',".game-field {\n  display: block;\n  background: $background-color;\n  border: 2px solid $border-color;\n  order: -1;\n}\n\n.game-field.dark {\n  background: $background-color-dark;\n  border-color: $border-color-dark;\n}\n","$game-over-modal-width: 500px;\n$game-over-modal-height: 320px;\n\n.game-over {\n  position: absolute;\n  top: calc(-1 * #{$game-over-modal-height});\n  left: calc(50vw - #{$game-over-modal-width} / 2);\n  width: $game-over-modal-width;\n  height: $game-over-modal-height;\n  font-family: Roboto, sans-serif;\n  transition: transform .3s ease-in;\n  &.active {\n    transform: translateY(calc(#{$game-over-modal-height} / 2 + 50vh));\n  }\n  &__title {\n    text-align: center;\n    margin-top: 50px;\n    font-size: 28px;\n    font-weight: 500;\n  }\n  &__score {\n    text-align: center;\n    margin-top: 20px;\n    font-size: 22px;\n    color: #333;\n    &::after {\n      content: attr(data-score);\n    }\n  }\n  &__new-game-btn {\n    margin: 90px auto;\n    font-size: 18px;\n    padding: 12px 18px;\n    border: none;\n  }\n}\n",".new-record {\n  &__form {\n    input {\n      display: block;\n      margin: 40px auto 0 auto;\n      background: none;\n      border: 1px solid $border-color;\n      padding: 10px;\n      font-size: 18px;\n      outline: none;\n      color: $text-color;\n\n      &:focus {\n        border-width: 2px;\n      }\n    }\n\n    button {\n      display: block;\n      width: 110px;\n      margin: 30px auto;\n    }\n  }\n}\n",".overlay {\n  box-sizing: border-box;\n  display: none;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: $overlay-color;\n  pointer-events: none;\n  &.active {\n    display: block;\n    pointer-events: all;\n  }\n}\n",".settings {\n  width: 400px;\n  text-align: center;\n  padding: 20px;\n\n  .item {\n    display: flex;\n    width: 100%;\n    justify-content: space-between;\n    margin-top: 20px;\n    font-size: 22px;\n  }\n}\n","$switch-width: 50px;\n$switch-height: 28px;\n\n.switch {\n  width: $switch-width;\n  height: $switch-height;\n}\n\n.switch-slider {\n  border-radius: $switch-height;\n}\n\n.switch-slider::before {\n  height: 24px;\n  width: 24px;\n  left: 2px;\n  bottom: 2px;\n}\n\ninput:checked + .switch-slider:before {\n  transform: translateX(22px);\n}\n",".table-container {\n  min-width: 600px;\n  height: 320px;\n  overflow: auto;\n}\n\n.best-players__table {\n  margin: 30px auto 0 auto;\n  border-collapse: collapse;\n  th, td {\n    padding: 5px 10px;\n    border: 1px solid $border-color;\n    min-width: 100px;\n    text-align: center;\n  }\n  thead {\n    background: $border-color;\n    color: #fff;\n  }\n  th {\n    border: 1px solid #fff;\n    padding: 15px;\n  }\n  tr:nth-child(2n) {\n    background: $background-color;\n  }\n  tr:hover {\n    background: $text-color;\n    color: #fff;\n  }\n}\n",".about {\n  width: 450px;\n  font-size: 18px;\n  line-height: 1.4em;\n  .contact-me {\n    margin-top: 45px;\n    text-transform: uppercase;\n    font-size: 22px;\n  }\n  a {\n    color: $text-color;\n    &:hover {\n      color: #222;\n      text-decoration: underline;\n    }\n    &:active {\n      color: #c13b31;\n    }\n  }\n  li {\n    list-style: none;\n    padding: 10px 0;\n    i {\n      margin-right: 10px;\n    }\n  }\n  p {\n    margin-top: 30px;\n  }\n  ul {\n    margin-top: 15px;\n    a {\n      text-decoration: none;\n    }\n  }\n}\n",".sidebar {\n  width: 300px;\n  min-width: 300px;\n  padding: 1rem;\n  border: 1px solid $border-color;\n\n  &__display {\n    position: relative;\n    padding: 2rem .8rem;\n    border: 1px solid $border-color ;\n  }\n\n  .record {\n    position: absolute;\n    top: .5rem;\n    right: .5rem;\n    font-size: 1.2rem;\n    &::after {\n      content: attr(data-record);\n    }\n  }\n\n  .score {\n    &::after {\n      content: attr(data-score);\n    }\n  }\n\n  .balls {\n    &::after {\n      content: attr(data-balls);\n    }\n  }\n\n  .score, .balls {\n    font-size: 2.5rem;\n    margin-top: 1.2rem;\n  }\n}\n\n.sidebar.dark {\n  border-color: $border-color-dark;\n  .sidebar__display {\n    border-color: $border-color-dark;\n  }\n  .menu__item:hover {\n    background: $border-color-dark;\n  }\n}\n\n.menu {\n  margin-top: 3rem;\n\n  &__item {\n    padding: .3rem .5rem;\n    margin-top: 2rem;\n    list-style: none;\n    font-size: 1.5rem;\n    cursor: pointer;\n    span {\n      margin-left: .5rem;\n    }\n    &:hover {\n      background: $border-color;\n      transition: all .2s ease-in-out;\n      color: #fff;\n    }\n  }\n}\n","@import '_constants';\n@import '_reset';\n@import './components/_modal';\n@import './components/_modal-card';\n@import './components/_switch';\n@import '_game-field';\n@import '_game-over';\n@import '_new-record';\n@import '_overlay';\n@import '_settings';\n@import '_settings-switch';\n@import '_best-players';\n@import '_about';\n@import '_sidebar';\n\n.app {\n  display: flex;\n  justify-content: center;\n  column-gap: 2rem;\n}\n"],sourceRoot:""}]);const a=s},645:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=t(e);return e[2]?"@media ".concat(e[2]," {").concat(n,"}"):n})).join("")},e.i=function(t,n,o){"string"==typeof t&&(t=[[null,t,""]]);var r={};if(o)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(r[s]=!0)}for(var a=0;a<t.length;a++){var c=[].concat(t[a]);o&&r[c[0]]||(n&&(c[2]?c[2]="".concat(n," and ").concat(c[2]):c[2]=n),e.push(c))}},e}},15:t=>{"use strict";function e(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,o=new Array(e);n<e;n++)o[n]=t[n];return o}t.exports=function(t){var n,o,r=(o=4,function(t){if(Array.isArray(t))return t}(n=t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var n=[],o=!0,r=!1,i=void 0;try{for(var s,a=t[Symbol.iterator]();!(o=(s=a.next()).done)&&(n.push(s.value),!e||n.length!==e);o=!0);}catch(t){r=!0,i=t}finally{try{o||null==a.return||a.return()}finally{if(r)throw i}}return n}}(n,o)||function(t,n){if(t){if("string"==typeof t)return e(t,n);var o=Object.prototype.toString.call(t).slice(8,-1);return"Object"===o&&t.constructor&&(o=t.constructor.name),"Map"===o||"Set"===o?Array.from(t):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?e(t,n):void 0}}(n,o)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=r[1],s=r[3];if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(s)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),l="/*# ".concat(c," */"),u=s.sources.map((function(t){return"/*# sourceURL=".concat(s.sourceRoot||"").concat(t," */")}));return[i].concat(u).concat([l]).join("\n")}return[i].join("\n")}},666:t=>{var e=function(t){"use strict";var e,n=Object.prototype,o=n.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},i=r.iterator||"@@iterator",s=r.asyncIterator||"@@asyncIterator",a=r.toStringTag||"@@toStringTag";function c(t,e,n){return Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{c({},"")}catch(t){c=function(t,e,n){return t[e]=n}}function l(t,e,n,o){var r=e&&e.prototype instanceof m?e:m,i=Object.create(r.prototype),s=new E(o||[]);return i._invoke=function(t,e,n){var o=h;return function(r,i){if(o===f)throw new Error("Generator is already running");if(o===p){if("throw"===r)throw i;return S()}for(n.method=r,n.arg=i;;){var s=n.delegate;if(s){var a=k(s,n);if(a){if(a===A)continue;return a}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(o===h)throw o=p,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);o=f;var c=u(t,e,n);if("normal"===c.type){if(o=n.done?p:d,c.arg===A)continue;return{value:c.arg,done:n.done}}"throw"===c.type&&(o=p,n.method="throw",n.arg=c.arg)}}}(t,n,s),i}function u(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}t.wrap=l;var h="suspendedStart",d="suspendedYield",f="executing",p="completed",A={};function m(){}function b(){}function C(){}var B={};B[i]=function(){return this};var g=Object.getPrototypeOf,v=g&&g(g(L([])));v&&v!==n&&o.call(v,i)&&(B=v);var y=C.prototype=m.prototype=Object.create(B);function x(t){["next","throw","return"].forEach((function(e){c(t,e,(function(t){return this._invoke(e,t)}))}))}function w(t,e){function n(r,i,s,a){var c=u(t[r],t,i);if("throw"!==c.type){var l=c.arg,h=l.value;return h&&"object"==typeof h&&o.call(h,"__await")?e.resolve(h.__await).then((function(t){n("next",t,s,a)}),(function(t){n("throw",t,s,a)})):e.resolve(h).then((function(t){l.value=t,s(l)}),(function(t){return n("throw",t,s,a)}))}a(c.arg)}var r;this._invoke=function(t,o){function i(){return new e((function(e,r){n(t,o,e,r)}))}return r=r?r.then(i,i):i()}}function k(t,n){var o=t.iterator[n.method];if(o===e){if(n.delegate=null,"throw"===n.method){if(t.iterator.return&&(n.method="return",n.arg=e,k(t,n),"throw"===n.method))return A;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return A}var r=u(o,t.iterator,n.arg);if("throw"===r.type)return n.method="throw",n.arg=r.arg,n.delegate=null,A;var i=r.arg;return i?i.done?(n[t.resultName]=i.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,A):i:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,A)}function O(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function _(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function E(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(O,this),this.reset(!0)}function L(t){if(t){var n=t[i];if(n)return n.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var r=-1,s=function n(){for(;++r<t.length;)if(o.call(t,r))return n.value=t[r],n.done=!1,n;return n.value=e,n.done=!0,n};return s.next=s}}return{next:S}}function S(){return{value:e,done:!0}}return b.prototype=y.constructor=C,C.constructor=b,b.displayName=c(C,a,"GeneratorFunction"),t.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===b||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,C):(t.__proto__=C,c(t,a,"GeneratorFunction")),t.prototype=Object.create(y),t},t.awrap=function(t){return{__await:t}},x(w.prototype),w.prototype[s]=function(){return this},t.AsyncIterator=w,t.async=function(e,n,o,r,i){void 0===i&&(i=Promise);var s=new w(l(e,n,o,r),i);return t.isGeneratorFunction(n)?s:s.next().then((function(t){return t.done?t.value:s.next()}))},x(y),c(y,a,"Generator"),y[i]=function(){return this},y.toString=function(){return"[object Generator]"},t.keys=function(t){var e=[];for(var n in t)e.push(n);return e.reverse(),function n(){for(;e.length;){var o=e.pop();if(o in t)return n.value=o,n.done=!1,n}return n.done=!0,n}},t.values=L,E.prototype={constructor:E,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(_),!t)for(var n in this)"t"===n.charAt(0)&&o.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function r(o,r){return a.type="throw",a.arg=t,n.next=o,r&&(n.method="next",n.arg=e),!!r}for(var i=this.tryEntries.length-1;i>=0;--i){var s=this.tryEntries[i],a=s.completion;if("root"===s.tryLoc)return r("end");if(s.tryLoc<=this.prev){var c=o.call(s,"catchLoc"),l=o.call(s,"finallyLoc");if(c&&l){if(this.prev<s.catchLoc)return r(s.catchLoc,!0);if(this.prev<s.finallyLoc)return r(s.finallyLoc)}else if(c){if(this.prev<s.catchLoc)return r(s.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<s.finallyLoc)return r(s.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&o.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var i=r;break}}i&&("break"===t||"continue"===t)&&i.tryLoc<=e&&e<=i.finallyLoc&&(i=null);var s=i?i.completion:{};return s.type=t,s.arg=e,i?(this.method="next",this.next=i.finallyLoc,A):this.complete(s)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),A},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),_(n),A}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var o=n.completion;if("throw"===o.type){var r=o.arg;_(n)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(t,n,o){return this.delegate={iterator:L(t),resultName:n,nextLoc:o},"next"===this.method&&(this.arg=e),A}},t}(t.exports);try{regeneratorRuntime=e}catch(t){Function("r","regeneratorRuntime = r")(e)}},379:(t,e,n)=>{"use strict";var o,r=function(){var t={};return function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}t[e]=n}return t[e]}}(),i=[];function s(t){for(var e=-1,n=0;n<i.length;n++)if(i[n].identifier===t){e=n;break}return e}function a(t,e){for(var n={},o=[],r=0;r<t.length;r++){var a=t[r],c=e.base?a[0]+e.base:a[0],l=n[c]||0,u="".concat(c," ").concat(l);n[c]=l+1;var h=s(u),d={css:a[1],media:a[2],sourceMap:a[3]};-1!==h?(i[h].references++,i[h].updater(d)):i.push({identifier:u,updater:A(d,e),references:1}),o.push(u)}return o}function c(t){var e=document.createElement("style"),o=t.attributes||{};if(void 0===o.nonce){var i=n.nc;i&&(o.nonce=i)}if(Object.keys(o).forEach((function(t){e.setAttribute(t,o[t])})),"function"==typeof t.insert)t.insert(e);else{var s=r(t.insert||"head");if(!s)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");s.appendChild(e)}return e}var l,u=(l=[],function(t,e){return l[t]=e,l.filter(Boolean).join("\n")});function h(t,e,n,o){var r=n?"":o.media?"@media ".concat(o.media," {").concat(o.css,"}"):o.css;if(t.styleSheet)t.styleSheet.cssText=u(e,r);else{var i=document.createTextNode(r),s=t.childNodes;s[e]&&t.removeChild(s[e]),s.length?t.insertBefore(i,s[e]):t.appendChild(i)}}function d(t,e,n){var o=n.css,r=n.media,i=n.sourceMap;if(r?t.setAttribute("media",r):t.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleSheet)t.styleSheet.cssText=o;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(o))}}var f=null,p=0;function A(t,e){var n,o,r;if(e.singleton){var i=p++;n=f||(f=c(e)),o=h.bind(null,n,i,!1),r=h.bind(null,n,i,!0)}else n=c(e),o=d.bind(null,n,e),r=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)};return o(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;o(t=e)}else r()}}t.exports=function(t,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===o&&(o=Boolean(window&&document&&document.all&&!window.atob)),o));var n=a(t=t||[],e);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var o=0;o<n.length;o++){var r=s(n[o]);i[r].references--}for(var c=a(t,e),l=0;l<n.length;l++){var u=s(n[l]);0===i[u].references&&(i[u].updater(),i.splice(u,1))}n=c}}}}},e={};function n(o){if(e[o])return e[o].exports;var r=e[o]={id:o,exports:{}};return t[o](r,r.exports,n),r.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{"use strict";var t=n(379),e=n.n(t),o=n(807);e()(o.Z,{insert:"head",singleton:!1}),o.Z.locals;const r={ROWS:10,COLUMNS:6,INTERVAL_SIZE:4,BLOCK_WIDTH:96,BLOCK_HEIGHT:54,BLOCK_DARK_COLOR:"#fe494f",BLOCK_NORMAL_COLOR:"#fe755c",BLOCK_LIGHT_COLOR:"#f29e74",BALL_RADIUS:10,BALL_SPEED:10,BALL_SHOOT_TIMEOUT:100,BALL_COLOR:"#5aa7f3",BONUS_RADIUS:12,BONUS_COLOR:"#3ad361",AIM_COLOR:"#a7bed3",FIELD_COLOR:"#e5e5e5",SHADOW_COLOR:"#cccccc",MAX_RECORDS_COUNT:20};var i=n(575),s=n.n(i),a=function t(e,n){if(s()(this,t),"number"!=typeof e||"number"!=typeof n)throw new TypeError("Invalid type of argument");this.x=e,this.y=n},c=n(913),l=n.n(c),u=function(){function t(e,n,o,r){s()(this,t),this.context=e,this.position=n,this.width=o,this.height=r,this.vx=0,this.vy=0}return l()(t,[{key:"draw",value:function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this.context.save(),t?this.context.fill():this.context.stroke(),this.context.restore()}},{key:"clear",value:function(){this.context.clearRect(this.position.x-this.context.lineWidth,this.position.y-this.context.lineWidth,this.width+2*this.context.lineWidth,this.height+2*this.context.lineWidth)}},{key:"move",value:function(){this.position.x+=this.vx,this.position.y+=this.vy}},{key:"moveOn",value:function(t,e){this.position.x+=t,this.position.y+=e}},{key:"moveTo",value:function(t,e){this.position.x=t,this.position.y=e}},{key:"setVx",value:function(t){this.vx=t}},{key:"setVy",value:function(t){this.vy=t}},{key:"setPosition",value:function(t){this.position=t}}]),t}(),h=n(525),d=n.n(h),f=n(205),p=n.n(f),A=n(585),m=n.n(A),b=n(754),C=n.n(b);var B=function(t){p()(r,t);var e,n,o=(e=r,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,o=C()(e);if(n){var r=C()(this).constructor;t=Reflect.construct(o,arguments,r)}else t=o.apply(this,arguments);return m()(this,t)});function r(){return s()(this,r),o.apply(this,arguments)}return l()(r,[{key:"draw",value:function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this.context.beginPath(),this.context.rect(this.position.x,this.position.y,this.width,this.height),d()(C()(r.prototype),"draw",this).call(this,t)}}]),r}(u);var g=function(t){p()(r,t);var e,n,o=(e=r,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,o=C()(e);if(n){var r=C()(this).constructor;t=Reflect.construct(o,arguments,r)}else t=o.apply(this,arguments);return m()(this,t)});function r(t,e,n){var i;return s()(this,r),(i=o.call(this,t,e,2*n,2*n)).radius=n,i}return r}(function(t){p()(r,t);var e,n,o=(e=r,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,o=C()(e);if(n){var r=C()(this).constructor;t=Reflect.construct(o,arguments,r)}else t=o.apply(this,arguments);return m()(this,t)});function r(){return s()(this,r),o.apply(this,arguments)}return l()(r,[{key:"draw",value:function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this.context.beginPath(),this.context.ellipse(this.position.x+Math.floor(this.width/2),this.position.y+Math.floor(this.height/2),Math.floor(this.width/2),Math.floor(this.height/2),0,0,2*Math.PI),d()(C()(r.prototype),"draw",this).call(this,t)}},{key:"center",get:function(){return new a(this.position.x+Math.floor(this.width/2),this.position.y+Math.floor(this.height/2))}}]),r}(u));var v=function(t){p()(r,t);var e,n,o=(e=r,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,o=C()(e);if(n){var r=C()(this).constructor;t=Reflect.construct(o,arguments,r)}else t=o.apply(this,arguments);return m()(this,t)});function r(t,e,n){var i;return s()(this,r),(i=o.call(this,t,e,Math.abs(e.x-n.x),Math.abs(e.y-n.y))).begin=e,i.end=n,i}return l()(r,[{key:"draw",value:function(){this.context.beginPath(),this.context.moveTo(this.begin.x,this.begin.y),this.context.lineTo(this.end.x,this.end.y),d()(C()(r.prototype),"draw",this).call(this,!1)}},{key:"setDash",value:function(t){this.context.setLineDash(t)}}]),r}(u),y=(n(319),function(){function t(e,n){s()(this,t),this.context=e,this.origin=n,this.vx=0,this.vy=0,this.isActive=!1,this.isBlocked=!1}return l()(t,[{key:"setOrigin",value:function(t){this.origin=t}},{key:"handleMouseMove",value:function(t){var e=function(t){var e=t.target.getBoundingClientRect();return new a(t.clientX-e.left,t.clientY-e.top)}(t),n=e.x,o=e.y,r=this.origin.x,i=this.origin.y;this.vx=n-r,this.vy=o-i}},{key:"draw",value:function(t){this.context.save();var e=new a(this.origin.x+9999*this.vx,this.origin.y+9999*this.vy),n=new v(this.context,this.origin,e);this.context.strokeStyle=t,this.context.lineWidth=3,n.setDash([10,10]),n.draw(),this.context.restore()}}]),t}()),x={balls:[],blocks:[],bonuses:[]};x.field=function(t,e,n){var o=document.createElement("canvas");return e&&Object.keys(e).forEach((function(t){o[t]=e[t]})),o}(0,{id:"game-field",className:"game-field",width:r.COLUMNS*r.BLOCK_WIDTH+(r.COLUMNS-1)*r.INTERVAL_SIZE,height:r.ROWS*r.BLOCK_HEIGHT+(r.ROWS-1)*r.INTERVAL_SIZE}),x.context=x.field.getContext("2d"),x.aim=new y(x.context,new a(x.field.width/2,x.field.height-r.BALL_RADIUS));const w=x,k={level:1,startPosition:new a(w.field.width/2-r.BALL_RADIUS,w.field.height-2*r.BALL_RADIUS-1),newBallsCount:0,requests:[],timeouts:[],aimingEnabled:!0,soundOn:!0,darkModeEnabled:!1};var O={gameOverModalElement:document.querySelector(".game-over"),newRecordModalElement:document.querySelector(".new-record"),overlayElement:document.querySelector("#overlay"),scoreElements:document.querySelectorAll("[data-score]"),ballsElement:document.querySelector(".balls"),recordElement:document.querySelector(".record"),settingsMenuItemElement:document.querySelector(".settings-item"),bestPlayersMenuItemElement:document.querySelector(".best-players-item"),aboutMenuItemElement:document.querySelector(".about-item"),settingsModalElement:document.querySelector(".settings"),bestPlayersModalElement:document.querySelector(".best-players"),aboutModalElement:document.querySelector(".about"),tableElement:document.querySelector(".best-players__table"),blockBumpSound:new Audio("./assets/audio/block-bump.mp3"),bonusBumpSound:new Audio("../../assets/audio/bonus-bump.mp3"),newStageSound:new Audio("../../assets/audio/new-stage.mp3"),gameOverSound:new Audio("../../assets/audio/game-over.mp3")};O.gameOverModalElement.querySelector(".game-over__new-game-btn").addEventListener("click",(function(){O.gameOverModalElement.classList.remove("active"),O.overlayElement.classList.remove("active")})),O.settingsMenuItemElement.addEventListener("click",(function(){O.settingsModalElement.classList.add("active"),O.overlayElement.classList.add("active")})),O.bestPlayersMenuItemElement.addEventListener("click",(function(){O.bestPlayersModalElement.classList.add("active"),O.overlayElement.classList.add("active")})),O.aboutMenuItemElement.addEventListener("click",(function(){O.aboutModalElement.classList.add("active"),O.overlayElement.classList.add("active")})),document.querySelectorAll(".modal-card").forEach((function(t){t.addEventListener("click",(function(e){e.target.classList.contains("modal-card__close-button")&&(t.classList.remove("active"),O.overlayElement.classList.remove("active"))}))}));const _=O;var E=function(t){p()(i,t);var e,n,o=(e=i,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,o=C()(e);if(n){var r=C()(this).constructor;t=Reflect.construct(o,arguments,r)}else t=o.apply(this,arguments);return m()(this,t)});function i(t,e,n,r,a){var c;return s()(this,i),(c=o.call(this,t,e,n,r)).hp=a,c}return l()(i,[{key:"draw",value:function(t){return this.context.save(),this.context.fillStyle=t,this.context.shadowColor=r.SHADOW_COLOR,this.context.shadowOffsetX=4,this.context.shadowOffsetY=4,d()(C()(i.prototype),"draw",this).call(this,!0),this.context.shadowColor="transparent",this.context.fillStyle="#ffffff",this.context.font="1.2rem monospace",this.context.textAlign="center",this.context.textBaseline="middle",this.context.fillText("".concat(this.hp),this.position.x+this.width/2,this.position.y+this.height/2),this.context.restore(),this}}]),i}(B);var L=function(t){p()(r,t);var e,n,o=(e=r,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,o=C()(e);if(n){var r=C()(this).constructor;t=Reflect.construct(o,arguments,r)}else t=o.apply(this,arguments);return m()(this,t)});function r(t,e,n){var i;return s()(this,r),(i=o.call(this,t,e,n)).speed=0,i}return l()(r,[{key:"setSpeed",value:function(t){this.speed=t}},{key:"stop",value:function(){this.vx=0,this.vy=0}},{key:"normalizeSpeed",value:function(){Math.abs(this.vy)<1&&(this.vx=+(.8*this.speed).toFixed(2),this.vy=+(.2*this.speed).toFixed(2))}},{key:"draw",value:function(t){this.context.save(),this.context.fillStyle=t,d()(C()(r.prototype),"draw",this).call(this,!0),this.context.restore()}}]),r}(g);var S=function(t){p()(i,t);var e,n,o=(e=i,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,o=C()(e);if(n){var r=C()(this).constructor;t=Reflect.construct(o,arguments,r)}else t=o.apply(this,arguments);return m()(this,t)});function i(){return s()(this,i),o.apply(this,arguments)}return l()(i,[{key:"draw",value:function(t){this.context.save(),this.context.lineWidth=Math.floor(.3*this.radius),this.context.strokeStyle=t,this.context.fillStyle=t,this.context.shadowColor=r.SHADOW_COLOR,this.context.shadowOffsetX=4,this.shadowOffsetY=4,this.context.beginPath(),d()(C()(i.prototype),"draw",this).call(this,!1),this.context.beginPath(),this.context.ellipse(this.position.x+this.radius,this.position.y+this.radius,Math.floor(.5*this.radius),Math.floor(.5*this.radius),0,0,2*Math.PI),this.context.fill(),this.context.restore()}}]),i}(g),j=n(713),M=n.n(j),R=n(757),I=n.n(R),D=n(926),P=n.n(D);function T(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function U(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?T(Object(n),!0).forEach((function(e){M()(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):T(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}var N={options:r,objects:w,state:k,DOMElements:_,DBManager:new(function(){function t(e){s()(this,t),this.url=e}var e,n;return l()(t,[{key:"addRecord",value:(n=P()(I().mark((function t(e){var n;return I().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,fetch(this.url,{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}});case 3:return n=t.sent,t.next=6,n.json();case 6:return t.abrupt("return",t.sent);case 9:return t.prev=9,t.t0=t.catch(0),t.abrupt("return",null);case 12:case"end":return t.stop()}}),t,this,[[0,9]])}))),function(t){return n.apply(this,arguments)})},{key:"getRecords",value:(e=P()(I().mark((function t(){var e,n;return I().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,fetch(this.url,{method:"GET",headers:{"Content-Type":"application/json"}});case 3:return e=t.sent,t.next=6,e.json();case 6:return n=t.sent,t.abrupt("return",n?Object.keys(n).map((function(t){return U({},n[t])})):[]);case 10:return t.prev=10,t.t0=t.catch(0),t.abrupt("return",null);case 13:case"end":return t.stop()}}),t,this,[[0,10]])}))),function(){return e.apply(this,arguments)})}]),t}())("https://swipe-brick-breaker-52559-default-rtdb.firebaseio.com/players.json"),highScores:null};function W(t){N.handleMouseDown(t)}function z(t){N.handleMouseMove(t)}function q(t){N.handleMouseUp(t)}N.createBlocksAndBonus=function(){var t,e,n,o=(0,t=this.options.COLUMNS,e=[],n=0,function o(){if(n>=t-0)throw new Error("Too much calls. This function can be called no more than ".concat(t-0-1," times"));var r=Math.floor(0+Math.random()*(t-0));return e.includes(r)?o():(e.push(r),++n,r)}),r=2,i=function(t){return t[Math.floor(Math.random()*t.length)]};this.state.level>100?r=i([2,3,4,5]):this.state.level>50?r=i([2,3,4]):this.state.level>20&&(r=i([2,3]));for(var s=0;s<r;++s){var c=o()*(this.options.BLOCK_WIDTH+this.options.INTERVAL_SIZE),l=this.options.BLOCK_HEIGHT+this.options.INTERVAL_SIZE,u=new E(this.objects.context,new a(c,l),this.options.BLOCK_WIDTH,this.options.BLOCK_HEIGHT,this.state.level);u.draw(this.setBlockColor(u)),this.objects.blocks.push(u)}var h=o()*(this.options.BLOCK_WIDTH+this.options.INTERVAL_SIZE)+this.options.BLOCK_WIDTH/2-this.options.BONUS_RADIUS,d=this.options.BLOCK_HEIGHT+this.options.INTERVAL_SIZE+this.options.BLOCK_HEIGHT/2-this.options.BONUS_RADIUS,f=new S(this.objects.context,new a(h,d),this.options.BONUS_RADIUS);f.draw(this.options.BONUS_COLOR),this.objects.bonuses.push(f)},N.createBall=function(){var t=new L(this.objects.context,new a(this.state.startPosition.x,this.state.startPosition.y),this.options.BALL_RADIUS);t.setSpeed(this.options.BALL_SPEED),t.draw(this.options.BALL_COLOR),this.objects.balls.push(t)},N.strictClearField=function(){this.objects.context.clearRect(0,0,this.objects.field.width,this.objects.field.height)},N.trailingClearField=function(){this.objects.context.save(),this.objects.context.fillStyle="".concat(this.options.FIELD_COLOR,"60"),this.objects.context.fillRect(0,0,this.objects.field.width,this.objects.field.height),this.objects.context.restore()},N.redrawObjects=function(){var t=this;this.trailingClearField(),this.objects.aim.isActive&&this.state.aimingEnabled&&this.objects.aim.draw(this.options.AIM_COLOR),this.objects.bonuses.forEach((function(e){e.draw(t.options.BONUS_COLOR)})),this.objects.balls.forEach((function(e){e.draw(t.options.BALL_COLOR)})),this.objects.blocks.forEach((function(e){e.draw(t.setBlockColor(e))}))},N.placeBalls=function(){var t=this;this.objects.balls.forEach((function(e){e.position=new a(t.state.startPosition.x,t.state.startPosition.y)}))},N.setBlockColor=function(t){var e=t.hp,n=this.state.level;return e<=.3*n?this.options.BLOCK_LIGHT_COLOR:e<=.6*n?this.options.BLOCK_NORMAL_COLOR:this.options.BLOCK_DARK_COLOR},N.gameOver=function(){var t=this;return this.objects.blocks.some((function(e){return e.position.y+e.height===t.objects.field.height}))},N.updateUI=function(){var t=this;this.DOMElements.scoreElements.forEach((function(e){e.dataset.score=t.state.level-1})),this.DOMElements.ballsElement.dataset.balls=this.objects.balls.length,this.highScores.then((function(e){var n=e.reduce((function(n,o,r){return t.DOMElements.recordElement.dataset.record=e.length?e[0].score:0,n+"\n        <tr>\n          <td>".concat(r+1,"</td>\n          <td>").concat(o.name,"</td>\n          <td>").concat(o.score,"</td>\n          <td>").concat(o.date,"</td>\n        </tr>\n      ")}),"");t.DOMElements.tableElement.querySelector("tbody").innerHTML=n}))},N.startNewStage=function(){var t=this;++this.state.level,this.objects.aim.isBlocked=!1;var e=this.options.BLOCK_HEIGHT+this.options.INTERVAL_SIZE;this.objects.blocks.forEach((function(t){t.moveOn(0,e)})),this.objects.bonuses.forEach((function(n){if(n.moveOn(0,e),n.position.y>t.objects.field.height){var o=t.objects.bonuses.indexOf(n);t.objects.bonuses.splice(o,1)}})),this.gameOver()&&(this.highScores.then((function(e){return function(t,e,n){for(var o=0,r=t.length-1,i=Math.floor((o+r)/2);o<=r;){if(n>t[i].score)r=i-1;else{if(!(n<t[i].score))return i;o=i+1}i=Math.floor((o+r)/2)}return o}(e,0,t.state.level-1)})).then((function(e){e<t.options.MAX_RECORDS_COUNT-1?t.DOMElements.newRecordModalElement.classList.add("active"):t.DOMElements.gameOverModalElement.classList.add("active")})),this.DOMElements.overlayElement.classList.add("active"),this.playSound(this.DOMElements.gameOverSound)),this.state.newBallsCount>0&&!this.gameOver()&&this.playSound(this.DOMElements.newStageSound),this.createBlocksAndBonus();for(var n=0;n<this.state.newBallsCount;++n)this.createBall();this.state.newBallsCount=0,this.updateUI(),this.placeBalls(),this.objects.aim.setOrigin(new a(this.state.startPosition.x+this.options.BALL_RADIUS,this.objects.field.height-this.options.BALL_RADIUS))},N.handleBallAndBlockCollision=function(t,e){var n,o,r=function(t,e,n){return t<=e||t>=n?Math.abs(n-t)<Math.abs(e-t)?n:e:t},i=r(t.center.x,e.position.x,e.position.x+e.width),s=r(t.center.y,e.position.y,e.position.y+e.height);if(n=t.center,o=new a(i,s),Math.sqrt(Math.pow(n.x-o.x,2)+Math.pow(n.y-o.y,2))<=t.radius){var c=t.center.x-i,l=t.center.y-s,u=Math.sqrt(c*c+l*l);if(!(u<=t.radius)||i!==e.position.x&&i!==e.position.x+e.width||s!==e.position.y&&s!==e.position.y+e.height)i!==e.position.x+e.width&&i!==e.position.x||(t.position.x=i===e.position.x+e.width?i:i-t.width,t.vx*=-1);else{c/=u,l/=u;var h=t.vx*c+t.vy*l;t.vx-=+(2*h*c).toFixed(2),t.vy-=+(2*h*l).toFixed(2),t.normalizeSpeed()}if(s!==e.position.y+e.height&&s!==e.position.y||(t.position.y=s===e.position.y+e.height?s:s-t.height,t.vy*=-1),0==--e.hp){var d=this.objects.blocks;d.splice(d.indexOf(e),1)}this.playSound(this.DOMElements.blockBumpSound)}},N.playSound=function(t){this.state.soundOn&&(t.currentTime=0,t.play())},N.handleBallAndWallCollision=function(t){(t.position.x<=0||t.position.x+t.width>=this.objects.field.width)&&(t.position.x=t.position.x<=0?0:this.objects.field.width-t.width,t.vx*=-1),(t.position.y<=0||t.position.y+t.height>this.objects.field.height)&&(t.position.y=t.position.y<=0?0:this.objects.field.height-t.height,t.position.y<=0?t.vy*=-1:t.stop())},N.handleBallAndBonusCollision=function(t,e){if(r=e,(o=t).position.x<=r.position.x+r.width&&o.position.y<=r.position.y+r.height&&o.position.x+o.width>=r.position.x&&o.position.y+o.height>=r.position.y){var n=this.objects.bonuses.indexOf(e);this.objects.bonuses.splice(n,1),++this.state.newBallsCount,this.playSound(this.DOMElements.bonusBumpSound)}var o,r},N.endOfStage=function(){var t=this;return this.objects.balls.every((function(e){return e.position.y+e.height>=t.objects.field.height}))},N.animate=function(){var t=this;this.state.requests.push(window.requestAnimationFrame((function(){t.animate(),t.redrawObjects()})));var e=!0;this.objects.balls.forEach((function(n,o){0===o?n.move():t.state.timeouts.push(window.setTimeout((function(){n.move()}),t.options.BALL_SHOOT_TIMEOUT*o)),n.position.y+n.height>t.objects.field.height&&e&&(e=!1,t.state.startPosition=new a(n.position.x,t.state.startPosition.y)),t.handleBallAndWallCollision(n),t.objects.blocks.forEach((function(e){t.handleBallAndBlockCollision(n,e)})),t.objects.bonuses.forEach((function(e){t.handleBallAndBonusCollision(n,e)}))})),this.endOfStage()&&(this.stopAnimation(),this.strictClearField(),this.startNewStage())},N.handleMouseDown=function(t){this.objects.aim.isBlocked||(this.objects.aim.isActive=!0,this.objects.aim.handleMouseMove(t),this.redrawObjects())},N.handleMouseMove=function(t){this.objects.aim.isActive&&!this.objects.aim.isBlocked&&(this.objects.aim.handleMouseMove(t),this.strictClearField(),this.redrawObjects())},N.handleMouseUp=function(){var t=this;if(!this.objects.aim.isBlocked){this.objects.aim.isActive=!1,this.objects.aim.isBlocked=!0;var e=function(e){return+(t.options.BALL_SPEED*e/Math.sqrt(Math.pow(t.objects.aim.vx,2)+Math.pow(t.objects.aim.vy,2))).toFixed(2)};this.objects.balls.forEach((function(n){n.setVx(e(t.objects.aim.vx)),n.setVy(e(t.objects.aim.vy)),n.normalizeSpeed()})),this.state.requests.push(window.requestAnimationFrame((function(){t.animate()})))}},N.stopAnimation=function(){this.state.requests.forEach((function(t){window.cancelAnimationFrame(t)})),this.state.requests=[],this.state.timeouts.forEach((function(t){window.clearTimeout(t)})),this.state.timeouts=[]},N.init=function(){var t,e,n=this;this.highScores=this.DBManager.getRecords().then((function(t){return t.sort((function(t,e){return e.score-t.score}))})).then((function(t){return t.slice(0,n.options.MAX_RECORDS_COUNT)})),t=this.objects.field,(e=document.getElementById("app"))&&e.append(t),this.createBlocksAndBonus(),this.createBall(),this.updateUI(),this.objects.field.addEventListener("mousedown",W),this.objects.field.addEventListener("mousemove",z),this.objects.field.addEventListener("mouseup",q)},N.reset=function(){this.state.level=1,this.state.startPosition=new a(this.objects.field.width/2-r.BALL_RADIUS,this.objects.field.height-2*r.BALL_RADIUS-1),this.objects.aim.origin=new a(this.state.startPosition.x+this.options.BALL_RADIUS,this.state.startPosition.y+this.options.BALL_RADIUS),this.objects.aim.isActive=!1,this.objects.aim.isBlocked=!1,this.objects.balls=[],this.objects.blocks=[],this.objects.bonuses=[],this.state.timeouts=[],this.state.requests=[],this.state.newBallsCount=0,this.strictClearField(),this.redrawObjects(),this.objects.field.removeEventListener("mousedown",W),this.objects.field.removeEventListener("mousemove",z),this.objects.field.removeEventListener("mouseup",q),this.objects.field.remove()};const $=N;window.onload=function(){$.init(),$.DOMElements.gameOverModalElement.querySelector(".game-over__new-game-btn").addEventListener("click",(function(){$.reset(),$.init()})),$.DOMElements.settingsModalElement.querySelector("#sound-control").addEventListener("change",(function(){$.state.soundOn=!$.state.soundOn})),$.DOMElements.settingsModalElement.querySelector("#aiming-control").addEventListener("change",(function(){$.state.aimingEnabled=!$.state.aimingEnabled})),$.DOMElements.settingsModalElement.querySelector("#dark-mode-control").addEventListener("change",(function(){$.state.darkModeEnabled=!$.state.darkModeEnabled;var t=document.body,e=$.objects.field,n=document.querySelector(".sidebar");$.state.darkModeEnabled?(t.classList.add("dark"),e.classList.add("dark"),n.classList.add("dark"),$.options.FIELD_COLOR="#231f20",$.options.SHADOW_COLOR="#1a1717"):(t.classList.remove("dark"),e.classList.remove("dark"),n.classList.remove("dark"),$.options.FIELD_COLOR="#e5e5e5",$.options.SHADOW_COLOR="#cccccc"),$.strictClearField(),$.redrawObjects()})),$.DOMElements.newRecordModalElement.querySelector("form").addEventListener("submit",(function(t){t.preventDefault();var e,n,o,r,i,s=document.getElementById("name").value,a=document.querySelector(".new-record .game-over__score").dataset.score;$.DBManager.addRecord({name:s,score:a,date:(e=Date.now(),n=new Date(e),o=n.getFullYear(),r=n.getMonth()+1,i=n.getDate(),"".concat(i<10?"0".concat(i):i,".").concat(r<10?"0".concat(r):r,".").concat(o))}),$.DOMElements.newRecordModalElement.classList.remove("active"),$.DOMElements.overlayElement.classList.remove("active"),$.reset(),$.init()}))}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,